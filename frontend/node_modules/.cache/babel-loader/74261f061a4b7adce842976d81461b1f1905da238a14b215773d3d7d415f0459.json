{"ast":null,"code":"function getErrorStackTrace(e) {\n  if (typeof e !== \"object\" || e == null) return undefined;\n  if (!(\"stack\" in e) || typeof e.stack !== \"string\") return undefined;\n  let stack = e.stack;\n  const prevLine = `${e}`;\n  if (stack.startsWith(prevLine)) {\n    stack = stack.slice(prevLine.length);\n  }\n  if (stack.startsWith(\"\\n\")) {\n    stack = stack.slice(1);\n  }\n  return stack;\n}\nexport function printErrorStackTrace(e) {\n  const stack = getErrorStackTrace(e);\n  if (stack == null) return;\n  console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n  constructor(message) {\n    super(message);\n    Object.defineProperty(this, \"status\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.name = \"LangSmithConflictError\";\n    this.status = 409;\n  }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n  // consume the response body to release the connection\n  // https://undici.nodejs.org/#/?id=garbage-collection\n  let errorBody;\n  if (response.ok) {\n    if (consume) {\n      errorBody = await response.text();\n    }\n    return;\n  }\n  errorBody = await response.text();\n  const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n  if (response.status === 409) {\n    throw new LangSmithConflictError(fullMessage);\n  }\n  const err = new Error(fullMessage);\n  err.status = response.status;\n  throw err;\n}\nconst ERR_CONFLICTING_ENDPOINTS = \"ERR_CONFLICTING_ENDPOINTS\";\nexport class ConflictingEndpointsError extends Error {\n  constructor() {\n    super(\"You cannot provide both LANGSMITH_ENDPOINT / LANGCHAIN_ENDPOINT \" + \"and LANGSMITH_RUNS_ENDPOINTS.\");\n    Object.defineProperty(this, \"code\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ERR_CONFLICTING_ENDPOINTS\n    });\n    this.name = \"ConflictingEndpointsError\"; // helpful in logs\n  }\n}\nexport function isConflictingEndpointsError(err) {\n  return typeof err === \"object\" && err !== null && err.code === ERR_CONFLICTING_ENDPOINTS;\n}","map":{"version":3,"names":["getErrorStackTrace","e","undefined","stack","prevLine","startsWith","slice","length","printErrorStackTrace","console","error","LangSmithConflictError","Error","constructor","message","Object","defineProperty","enumerable","configurable","writable","value","name","status","raiseForStatus","response","context","consume","errorBody","ok","text","fullMessage","statusText","err","ERR_CONFLICTING_ENDPOINTS","ConflictingEndpointsError","isConflictingEndpointsError","code"],"sources":["/Users/chetan/Desktop/summarize_agent/frontend/node_modules/@langchain/core/node_modules/langsmith/dist/utils/error.js"],"sourcesContent":["function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = \"LangSmithConflictError\";\n        this.status = 409;\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    let errorBody;\n    if (response.ok) {\n        if (consume) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    errorBody = await response.text();\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    const err = new Error(fullMessage);\n    err.status = response.status;\n    throw err;\n}\nconst ERR_CONFLICTING_ENDPOINTS = \"ERR_CONFLICTING_ENDPOINTS\";\nexport class ConflictingEndpointsError extends Error {\n    constructor() {\n        super(\"You cannot provide both LANGSMITH_ENDPOINT / LANGCHAIN_ENDPOINT \" +\n            \"and LANGSMITH_RUNS_ENDPOINTS.\");\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ERR_CONFLICTING_ENDPOINTS\n        });\n        this.name = \"ConflictingEndpointsError\"; // helpful in logs\n    }\n}\nexport function isConflictingEndpointsError(err) {\n    return (typeof err === \"object\" &&\n        err !== null &&\n        err.code === ERR_CONFLICTING_ENDPOINTS);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
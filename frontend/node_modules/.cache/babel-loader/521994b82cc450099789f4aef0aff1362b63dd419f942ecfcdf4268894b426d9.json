{"ast":null,"code":"import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseRecordDef(def, refs) {\n  if (refs.target === \"openAi\") {\n    console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n  }\n  if (refs.target === \"openApi3\" && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce((acc, key) => ({\n        ...acc,\n        [key]: parseDef(def.valueType._def, {\n          ...refs,\n          currentPath: [...refs.currentPath, \"properties\", key]\n        }) ?? parseAnyDef(refs)\n      }), {}),\n      additionalProperties: refs.rejectedAdditionalProperties\n    };\n  }\n  const schema = {\n    type: \"object\",\n    additionalProperties: parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    }) ?? refs.allowedAdditionalProperties\n  };\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n  if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n    const {\n      type,\n      ...keyType\n    } = parseStringDef(def.keyType._def, refs);\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values\n      }\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded && def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.type._def.checks?.length) {\n    const {\n      type,\n      ...keyType\n    } = parseBrandedDef(def.keyType._def, refs);\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  }\n  return schema;\n}","map":{"version":3,"names":["ZodFirstPartyTypeKind","parseDef","parseStringDef","parseBrandedDef","parseAnyDef","parseRecordDef","def","refs","target","console","warn","keyType","_def","typeName","ZodEnum","type","required","values","properties","reduce","acc","key","valueType","currentPath","additionalProperties","rejectedAdditionalProperties","schema","allowedAdditionalProperties","ZodString","checks","length","propertyNames","enum","ZodBranded"],"sources":["/Users/chetan/Desktop/summarize_agent/frontend/node_modules/zod-to-json-schema/dist/esm/parsers/record.js"],"sourcesContent":["import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? parseAnyDef(refs),\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
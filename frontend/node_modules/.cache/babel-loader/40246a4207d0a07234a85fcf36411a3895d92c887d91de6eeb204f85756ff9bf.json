{"ast":null,"code":"// Relaxed UUID validation regex (allows any valid UUID format including nil UUIDs)\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nexport function assertUuid(str, which) {\n  // Use relaxed regex validation instead of strict uuid.validate()\n  // This allows edge cases like nil UUIDs or test UUIDs that might not pass strict validation\n  if (!UUID_REGEX.test(str)) {\n    const msg = which !== undefined ? `Invalid UUID for ${which}: ${str}` : `Invalid UUID: ${str}`;\n    throw new Error(msg);\n  }\n  return str;\n}","map":{"version":3,"names":["UUID_REGEX","assertUuid","str","which","test","msg","undefined","Error"],"sources":["/Users/chetan/Desktop/summarize_agent/frontend/node_modules/@langchain/core/node_modules/langsmith/dist/utils/_uuid.js"],"sourcesContent":["// Relaxed UUID validation regex (allows any valid UUID format including nil UUIDs)\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nexport function assertUuid(str, which) {\n    // Use relaxed regex validation instead of strict uuid.validate()\n    // This allows edge cases like nil UUIDs or test UUIDs that might not pass strict validation\n    if (!UUID_REGEX.test(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAG,iEAAiE;AACpF,OAAO,SAASC,UAAUA,CAACC,GAAG,EAAEC,KAAK,EAAE;EACnC;EACA;EACA,IAAI,CAACH,UAAU,CAACI,IAAI,CAACF,GAAG,CAAC,EAAE;IACvB,MAAMG,GAAG,GAAGF,KAAK,KAAKG,SAAS,GACzB,oBAAoBH,KAAK,KAAKD,GAAG,EAAE,GACnC,iBAAiBA,GAAG,EAAE;IAC5B,MAAM,IAAIK,KAAK,CAACF,GAAG,CAAC;EACxB;EACA,OAAOH,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}